openapi: 3.0.0
info:
  title: Metadata Management API
  description: Management API for metadata objects
  version: v1.0.0
servers:
- url: https://virtserver.swaggerhub.com/24i-API/Metadata_Management_API/v1.0.0
  description: SwaggerHub API Auto Mocking
- url: https://testing.booxmedia.xyz/api/metadata/management/v1/
  description: Testing server
paths:
  /broadcast_slots/{broadcast_slot_id}:
    patch:
      tags:
      - Broadcast slots
      summary: Update broadcast slot
      description: Update a broadcast slot
      operationId: UpdateBroadcastSlot
      parameters:
      - name: broadcast_slot_id
        in: path
        description: The ID of the broadcast slot to update.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body'
        required: true
      responses:
        "204":
          description: The broadcast slot was updated successfully
        "401":
          description: Unauthorized
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "404":
          description: Broadcast slot does not exist
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
      security:
      - ApiKeyAuth: []
components:
  schemas:
    UpdateBroadcastSlotResourceEntity:
      allOf:
      - $ref: '#/components/schemas/BroadcastSlotResourceIdentifier'
      - type: object
        properties:
          attributes:
            allOf:
            - $ref: '#/components/schemas/Attributes'
            - type: object
              properties:
                services_blacklisted:
                  type: array
                  description: An array of the service types that are blacklisted
                    for this broadcast slot.
                  example:
                  - npvr
                  - catchup
                  items:
                    type: string
                    enum:
                    - live
                    - npvr
                    - catchup
                    - startover
                    - pause
              additionalProperties: false
    Error:
      required:
      - code
      - details
      - id
      - status
      - title
      type: object
      properties:
        id:
          type: string
          description: A unique identifier for this particular occurrence of the problem.
        status:
          type: string
          description: The HTTP status code applicable to this problem, expressed
            as a string value.
        code:
          type: string
          description: An application-specific error code, expressed as a string value.
        title:
          type: string
          description: A short, human-readable summary of the problem that SHOULD
            NOT change from occurrence to occurrence of the problem.
        details:
          type: string
          description: A human-readable explanation specific to this occurrence of
            the problem.
      example:
        id: 6de7da3e-8877-4f2b-a670-16e18e5d79a0
        status: "400"
        code: "31201"
        title: Bad Request
        detail: Parameter 'Foo' is invalid
    BroadcastSlotResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - type: object
        properties:
          id:
            pattern: uuid
            type: string
            example: f50a8a6b-e96a-4eb7-8d87-a14c1a991b96
          type:
            pattern: ^BroadcastSlot$
            type: string
            example: BroadcastSlot
    ResourceIdentifier:
      required:
      - id
      - type
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        type:
          $ref: '#/components/schemas/Type'
      discriminator:
        propertyName: type
    Id:
      type: string
      description: The id of the resource being referenced
      example: e022f021-11f5-4cd6-89f2-02535d89eed6
    Type:
      type: string
      description: Used to describe resource objects that share common attributes
        and relationships.
      example: ResourceOject
    Attributes:
      type: object
      additionalProperties: true
      description: An attributes object representing some of the resourceâ€™s data.
    body:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UpdateBroadcastSlotResourceEntity'
    inline_response_401:
      required:
      - errors
      type: object
      properties:
        errors:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/Error'
            - example:
                status: "401"
                code: "10201"
                title: Invalid api key
                detail: 'Invalid authorization api key: Unauthorised Api key provided
                  in the header'
    inline_response_404:
      required:
      - errors
      type: object
      properties:
        errors:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/Error'
            - example:
                status: "404"
                code: "30900"
                title: Not Found
                detail: Broadcast slot with ID "f50a8a6b-e96a-4eb7-8d87-a14c1a991b96"
                  not found
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: Authentication
      in: header
