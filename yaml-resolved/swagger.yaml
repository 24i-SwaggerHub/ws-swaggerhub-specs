openapi: 3.0.0
info:
  title: User License API
  description: User License API used for managing user licenses and related products.
    Supposed to be consumed by user client application.
  version: 4.0.0
servers:
- url: https://virtserver.swaggerhub.com/24i-API/UserLicense/4.0.0
  description: SwaggerHub API Auto Mocking
- url: https://testing.booxmedia.xyz/api/license/v4
  description: Testing server
paths:
  /users/{user_id}/licenses:
    get:
      tags:
      - license
      summary: Get user licenses index
      description: |
        Returns all licenses for a given user. All related products are included in the response, which can be used for grouping.
      operationId: GetUserLicenses
      parameters:
      - name: user_id
        in: path
        description: The ID of the user to fetch licenses for.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "401":
          description: Unauthorized
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        "404":
          description: User does not exist
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
components:
  schemas:
    UserLicenseResource:
      allOf:
      - $ref: '#/components/schemas/LicenseResourceIdentifier'
      - required:
        - attributes
        - relationships
        type: object
        properties:
          attributes:
            allOf:
            - $ref: '#/components/schemas/CommonLicenseResourceAttributes'
            - required:
              - purchase_date
              - start_date
              - status
              - stop_date
              type: object
              properties:
                purchase_date:
                  type: integer
                  description: The Unix epoch timestamp denoting date when the license
                    was purchased
                  readOnly: true
                  example: 1523268698
          relationships:
            $ref: '#/components/schemas/LicenseResourceRelationships'
          links:
            allOf:
            - $ref: '#/components/schemas/Links'
            - type: object
              properties:
                self:
                  type: string
                  example: https://boox.fi/api/user/waqqas.jabbar@gmail.com/license/10
    LicenseResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - type: object
        properties:
          id:
            type: string
            example: "42"
          type:
            pattern: ^License$
            type: string
            example: License
    ResourceIdentifier:
      required:
      - id
      - type
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        type:
          $ref: '#/components/schemas/Type'
      discriminator:
        propertyName: type
    Id:
      type: string
      description: The id of the resource being referenced
      example: e022f021-11f5-4cd6-89f2-02535d89eed6
    Type:
      type: string
      description: Used to describe resource objects that share common attributes
        and relationships.
      example: ResourceOject
    CommonLicenseResourceAttributes:
      allOf:
      - $ref: '#/components/schemas/Attributes'
      - required:
        - start_date
        - stop_date
        type: object
        properties:
          status:
            type: string
            description: Current status of license
            nullable: false
            example: ACTIVE
            enum:
            - PROCESSING
            - CHECK_INVALID
            - ORDER_ERROR
            - ACTIVE
            - EXPIRED
            - SUSPENDED
            - SUSPENDEDADMIN
          start_date:
            type: integer
            description: The Unix epoch timestamp denoting the start date of the license
            nullable: false
            example: 1523268666
          stop_date:
            type: integer
            description: The Unix epoch timestamp denoting expiration date of the
              license
            nullable: false
            example: 1523268698
        additionalProperties: false
    Attributes:
      type: object
      additionalProperties: true
      description: An attributes object representing some of the resourceâ€™s data.
    LicenseResourceRelationships:
      allOf:
      - $ref: '#/components/schemas/Relationships'
      - required:
        - product
        - user
        type: object
        properties:
          user:
            $ref: '#/components/schemas/LicenseResourceRelationships_user'
          product:
            $ref: '#/components/schemas/LicenseResourceRelationships_product'
        additionalProperties: false
    Relationships:
      type: object
      additionalProperties:
        required:
        - data
        type: object
        properties:
          data:
            oneOf:
            - $ref: '#/components/schemas/ResourceIdentifier'
            - type: array
              items:
                $ref: '#/components/schemas/ResourceIdentifier'
      description: A relationships object describing relationships between the resource
        and other JSON:API resources.
    UserResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - type: object
        properties:
          id:
            type: string
            example: "41"
          type:
            pattern: ^User$
            type: string
            example: User
    ProductResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - type: object
        properties:
          id:
            type: string
            example: "41"
          type:
            pattern: ^Product$
            type: string
            example: Product
    Links:
      type: object
      description: A links object containing links related to the resource.
    UserProductResource:
      allOf:
      - $ref: '#/components/schemas/ProductResourceIdentifier'
      - required:
        - attributes
        - relationships
        type: object
        properties:
          attributes:
            allOf:
            - $ref: '#/components/schemas/UserProductResourceAttributes'
            - required:
              - description
              - title
              type: object
          relationships:
            $ref: '#/components/schemas/UserProductResourceRelationships'
    UserProductResourceAttributes:
      allOf:
      - $ref: '#/components/schemas/Attributes'
      - type: object
        properties:
          title:
            type: string
            description: Title of the product
            example: Sport channels meagpack
          description:
            type: string
            description: Description of the product
            example: Complete collection fo all sports channels
          type:
            type: string
            description: Type of the product
            example: CHANNEL_GROUP
          isPremium:
            type: boolean
            description: Whether the product is premium one
            example: true
        additionalProperties: true
    UserProductResourceRelationships:
      allOf:
      - $ref: '#/components/schemas/Relationships'
      - type: object
        properties:
          live:
            $ref: '#/components/schemas/UserProductResourceRelationships_live'
          catchup:
            $ref: '#/components/schemas/UserProductResourceRelationships_catchup'
          npvr:
            $ref: '#/components/schemas/UserProductResourceRelationships_npvr'
          startover:
            $ref: '#/components/schemas/UserProductResourceRelationships_startover'
        additionalProperties: false
    ProductLiveItemResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - $ref: '#/components/schemas/ProductItemResourceIdentifierAttributes'
      - type: object
        description: Product live service item
    ProductItemResourceIdentifierAttributes:
      type: object
      properties:
        id:
          type: string
          example: "41"
        type:
          pattern: ^Channel$
          example: Channel
      description: Product service item
    ProductCatchupItemResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - $ref: '#/components/schemas/ProductItemResourceIdentifierAttributes'
      - type: object
        description: Product catchup service item
    ProductNpvrItemResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - $ref: '#/components/schemas/ProductItemResourceIdentifierAttributes'
      - type: object
        description: Product npvr service item
    ProductStartoverItemResourceIdentifier:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentifier'
      - $ref: '#/components/schemas/ProductItemResourceIdentifierAttributes'
      - type: object
        description: Product startover service item
    Error:
      required:
      - code
      - details
      - id
      - status
      - title
      type: object
      properties:
        id:
          type: string
          description: A unique identifier for this particular occurrence of the problem.
        status:
          type: string
          description: The HTTP status code applicable to this problem, expressed
            as a string value.
        code:
          type: string
          description: An application-specific error code, expressed as a string value.
        title:
          type: string
          description: A short, human-readable summary of the problem that SHOULD
            NOT change from occurrence to occurrence of the problem.
        details:
          type: string
          description: A human-readable explanation specific to this occurrence of
            the problem.
      example:
        id: 6de7da3e-8877-4f2b-a670-16e18e5d79a0
        status: "400"
        code: "31201"
        title: Bad Request
        detail: Parameter 'Foo' is invalid
    inline_response_200:
      required:
      - data
      - included
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserLicenseResource'
        included:
          type: array
          items:
            $ref: '#/components/schemas/UserProductResource'
    inline_response_401:
      required:
      - errors
      type: object
      properties:
        errors:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/Error'
            - example:
                status: "401"
                code: "10201"
                title: Invalid token
                detail: Client is not authorized to fetch user licenses
    inline_response_404:
      required:
      - errors
      type: object
      properties:
        errors:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/Error'
            - example:
                status: "404"
                code: "10101"
                title: Not Found
                detail: The requested user does not exist
    LicenseResourceRelationships_user:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UserResourceIdentifier'
    LicenseResourceRelationships_product:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProductResourceIdentifier'
    UserProductResourceRelationships_live:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          description: List of items with live service enabled
          items:
            $ref: '#/components/schemas/ProductLiveItemResourceIdentifier'
    UserProductResourceRelationships_catchup:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          description: List of items with cathup service enabled
          items:
            $ref: '#/components/schemas/ProductCatchupItemResourceIdentifier'
    UserProductResourceRelationships_npvr:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          description: List of items with npvr service enabled enabled
          items:
            $ref: '#/components/schemas/ProductNpvrItemResourceIdentifier'
    UserProductResourceRelationships_startover:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          description: List of items with startover service enabled
          items:
            $ref: '#/components/schemas/ProductStartoverItemResourceIdentifier'
